<div class="row">
  <div class="col-12">
    <h1>Mi Carrito</h1>
    <p class="text-muted">Carrito: {{cartId}}</p>
  </div>
</div>

{{#if hasProducts}}
{{#if cart.summary}}
<div class="row mb-4">
  <div class="col-12">
    <div class="alert alert-info">
      <div class="row">
        <div class="col-md-4">
          <strong>Productos:</strong> {{cart.summary.productCount}}
        </div>
        <div class="col-md-4">
          <strong>Artículos:</strong> {{cart.summary.totalItems}}
        </div>
        <div class="col-md-4">
          <strong>Total:</strong> <span class="text-success">${{cart.summary.total}}</span>
        </div>
      </div>
    </div>
  </div>
</div>
{{/if}}

<!-- Lista de productos -->
<div class="row">
  {{#each cart.products}}
    <div class="col-12 mb-3">
      <div class="card">
        <div class="card-body">
          <div class="row align-items-center">
            <div class="col-md-6">
              {{#if this.product}}
                <h5>{{this.product.title}}</h5>
                <p class="text-muted">{{this.product.description}}</p>
                <small>Categoría: {{this.product.category}} | Stock: {{this.product.stock}}</small>
              {{else}}
                <h5 class="text-danger">Producto no disponible</h5>
              {{/if}}
            </div>
            
            <div class="col-md-3 text-center">
              {{#if this.product}}
                <p><strong>Precio:</strong> ${{this.product.price}}</p>
                <p><strong>Cantidad:</strong> {{this.quantity}}</p>
              {{/if}}
            </div>
            
            <div class="col-md-3 text-center">
              {{#if this.product}}
                <h6 class="text-success">Total: ${{multiply this.product.price this.quantity}}</h6>
                <button class="btn btn-sm btn-primary me-1" onclick="editarCantidad('{{../cartId}}', '{{this.product._id}}', {{this.quantity}})">
                  Editar
                </button>
                <button class="btn btn-sm btn-danger" onclick="eliminarProducto('{{../cartId}}', '{{this.product._id}}')">
                  Quitar
                </button>
              {{else}}
                <button class="btn btn-sm btn-outline-danger" onclick="eliminarProducto('{{../cartId}}', '{{this.product}}')">
                  Eliminar
                </button>
              {{/if}}
            </div>
          </div>
        </div>
      </div>
    </div>
  {{/each}}
</div>

<!-- Botones del carrito -->
<div class="row mt-4">
  <div class="col-12">
    <div class="d-flex justify-content-between">
      <div>
        <a href="/" class="btn btn-outline-primary">Seguir comprando</a>
        <button class="btn btn-outline-warning ms-2" onclick="vaciarCarrito('{{cartId}}')">
          Vaciar carrito
        </button>
      </div>
      <div>
        {{#if cart.summary}}
        <button class="btn btn-success btn-lg" onclick="procesarCompra('{{cartId}}')">
          Comprar - ${{cart.summary.total}}
        </button>
        {{/if}}
      </div>
    </div>
  </div>
</div>

{{else}}
<!-- Carrito vacío -->
<div class="row">
  <div class="col-12">
    <div class="alert alert-info text-center">
      <h4>Tu carrito está vacío</h4>
      <p>¡Agrega productos para empezar a comprar!</p>
      <a href="/" class="btn btn-primary">Ver productos</a>
    </div>
  </div>
</div>
{{/if}}

<!-- Funciones del carrito -->
<script>
function editarCantidad(carritoId, productoId, cantidadActual) {
  const nuevaCantidad = prompt('Nueva cantidad:', cantidadActual);
  
  if (nuevaCantidad && nuevaCantidad > 0 && nuevaCantidad <= 999) {
    fetch(`/api/carts/${carritoId}/products/${productoId}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ quantity: parseInt(nuevaCantidad) })
    })
    .then(res => res.json())
    .then(data => {
      if (data.error) {
        if (window.notifications) {
          window.notifications.error('Error: ' + data.message);
        } else {
          alert('Error: ' + data.message);
        }
      } else {
        if (window.notifications) {
          window.notifications.success('Cantidad actualizada correctamente');
        }
        // Actualizar ícono del carrito
        if (window.actualizarCarrito) {
          window.actualizarCarrito();
        }
        setTimeout(() => window.location.reload(), 1000);
      }
    })
    .catch(err => {
      console.error('Error:', err);
      if (window.notifications) {
        window.notifications.error('Error al actualizar cantidad');
      } else {
        alert('Error al actualizar cantidad');
      }
    });
  } else if (nuevaCantidad !== null) {
    if (window.notifications) {
      window.notifications.warning('La cantidad debe ser entre 1 y 999');
    } else {
      alert('La cantidad debe ser entre 1 y 999');
    }
  }
}

function eliminarProducto(carritoId, productoId) {
  if (confirm('¿Quitar este producto del carrito?')) {
    fetch(`/api/carts/${carritoId}/products/${productoId}`, {
      method: 'DELETE'
    })
    .then(res => res.json())
    .then(data => {
      if (data.error) {
        if (window.notifications) {
          window.notifications.error('Error: ' + data.message);
        } else {
          alert('Error: ' + data.message);
        }
      } else {
        if (window.notifications) {
          window.notifications.success('Producto eliminado del carrito');
        }
        // Actualizar ícono del carrito
        if (window.actualizarCarrito) {
          window.actualizarCarrito();
        }
        setTimeout(() => window.location.reload(), 1000);
      }
    })
    .catch(err => {
      console.error('Error:', err);
      if (window.notifications) {
        window.notifications.error('Error al eliminar producto');
      } else {
        alert('Error al eliminar producto');
      }
    });
  }
}

function vaciarCarrito(carritoId) {
  if (confirm('¿Vaciar todo el carrito? Esta acción no se puede deshacer.')) {
    fetch(`/api/carts/${carritoId}`, {
      method: 'DELETE'
    })
    .then(res => res.json())
    .then(data => {
      if (data.error) {
        if (window.notifications) {
          window.notifications.error('Error: ' + data.message);
        } else {
          alert('Error: ' + data.message);
        }
      } else {
        // Limpiar localStorage
        localStorage.removeItem('currentCartId');
        if (window.notifications) {
          window.notifications.success('Carrito vaciado correctamente');
        }
        // Actualizar ícono del carrito
        if (window.actualizarCarrito) {
          window.actualizarCarrito();
        }
        setTimeout(() => window.location.reload(), 1000);
      }
    })
    .catch(err => {
      console.error('Error:', err);
      if (window.notifications) {
        window.notifications.error('Error al vaciar carrito');
      } else {
        alert('Error al vaciar carrito');
      }
    });
  }
}

function procesarCompra(carritoId) {
  if (confirm('¿Procesar la compra? Se finalizará tu pedido.')) {
    // Mostrar loading
    const btnComprar = event.target;
    const textoOriginal = btnComprar.innerHTML;
    btnComprar.innerHTML = 'Procesando...';
    btnComprar.disabled = true;
    
    fetch(`/api/carts/${carritoId}/purchase`, {
      method: 'POST'
    })
    .then(res => res.json())
    .then(data => {
      if (data.error) {
        if (window.notifications) {
          window.notifications.error('Error al procesar compra: ' + data.message);
        } else {
          alert('Error al procesar compra: ' + data.message);
        }
        btnComprar.innerHTML = textoOriginal;
        btnComprar.disabled = false;
      } else {
        // Limpiar localStorage
        localStorage.removeItem('currentCartId');
        
        // Mostrar mensaje de éxito
        if (window.notifications) {
          window.notifications.success(`¡Compra exitosa! Orden: ${data.purchase.orderNumber} - Total: $${data.purchase.total}`);
        } else {
          alert(`¡Compra exitosa!\n\nNúmero de orden: ${data.purchase.orderNumber}\nTotal: $${data.purchase.total}\n\n¡Gracias por tu compra!`);
        }
        
        // Actualizar ícono del carrito
        if (window.actualizarCarrito) {
          window.actualizarCarrito();
        }
        
        // Redirigir al home después de un momento
        setTimeout(() => {
          window.location.href = '/';
        }, 2000);
      }
    })
    .catch(err => {
      console.error('Error:', err);
      if (window.notifications) {
        window.notifications.error('Error al procesar la compra');
      } else {
        alert('Error al procesar la compra');
      }
      btnComprar.innerHTML = textoOriginal;
      btnComprar.disabled = false;
    });
  }
}
</script>